apiVersion: batch/v1
kind: Job
metadata:
  generateName: deepspeed-torchrun-
spec:
  completions: 4
  parallelism: 4
  completionMode: Indexed

  template:
    metadata:
      annotations:
        gke-gcsfuse/volumes: "true"
        gke-gcsfuse/cpu-limit: 500m
        gke-gcsfuse/memory-limit: 100Mi
        gke-gcsfuse/ephemeral-storage-limit: 30Gi
    spec:
      restartPolicy: Never

      containers:
      - command:
        # - "bash"
        # - "-c"
        # - "/start.sh"
        - 'bash'
        - '-c'
        - 'if [[ ${JOB_COMPLETION_INDEX} == 0 ]]; then echo ${MY_POD_IP} > /gcs/master.txt; fi; n=0; while [[ $n -lt 10 ]]; do if [ -f "/gcs/master.txt" ]; then export master_addr=$(cat /gcs/master.txt); torchrun --nnodes=4 --node_rank=${JOB_COMPLETION_INDEX} --master_addr=${master_addr} --master_port=1111 --nproc_per_node=2 main.py --data_path "samsum" --data_split 10,0,0 --model_name_or_path "/gcs/deepspeed_repo/base_model/Llama-2-7b-hf/Llama-2-7b-hf" --per_device_train_batch_size 4 --per_device_eval_batch_size 4 --max_seq_len 512 --learning_rate 9.65e-6 --weight_decay 0. --num_train_epochs 1  --gradient_accumulation_steps 1 --lr_scheduler_type cosine --num_warmup_steps 0 --seed 1234 --gradient_checkpointing --zero_stage 3 --deepspeed --output_dir output --print_loss; break; fi; sleep 30; n=$((n+1)); done; if [ -f "/gcs/master.txt" ]; then sleep 120; rm -rf /gcs/master.txt; fi; echo "existing..."'
        # - 'if [[ ${JOB_COMPLETION_INDEX} == 0 ]]; then echo ${MY_POD_IP} > /gcs/master.txt; fi; n=0; while [[ $n -lt 10 ]]; do if [ -f "/gcs/master.txt" ]; then export master_addr=$(cat /gcs/master.txt); echo "enter here!"; break; fi; sleep 30; n=$((n+1)); done; if [ -f "/gcs/master.txt" ]; then sleep 120; rm -rf /gcs/master.txt; fi; echo "enter 2!"'
        image: 'us-docker.pkg.dev/PROJECT_ID/AR_REPO/deepspeed-chat:torchrun'
        name: 'deepspeed-torchrun'
        imagePullPolicy: Always
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: hostfile
          mountPath: "/config"
          readOnly: true
        - name: log
          mountPath: /log
          readOnly: false
        - mountPath: /dev/shm
          name: dshm
        - name: gcs-fuse-csi-ephemeral
          mountPath: /gcs
          readOnly: false
        resources:
          limits:
            nvidia.com/gpu: 2
      nodeSelector:
        cloud.google.com/gke-nodepool: pool-6
      volumes:
      - name: hostfile
        configMap:
          name: hostfile-config
      - name: log
        hostPath:
          path: /tmp
          type: Directory
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: 48G
      - name: gcs-fuse-csi-ephemeral
        csi:
          driver: gcsfuse.csi.storage.gke.io
          #readOnly: true
          volumeAttributes:
            bucketName: flius-vpc-2-torchrun-llam2-new
            mountOptions: "implicit-dirs"
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: hostfile-config
# data:
#   hostfile: |
#     deepspeed-shijun-0.deepspeed-shijun-svc slots=2
#     deepspeed-shijun-1.deepspeed-shijun-svc slots=2
#     deepspeed-shijun-2.deepspeed-shijun-svc slots=2
#     deepspeed-shijun-3.deepspeed-shijun-svc slots=2
